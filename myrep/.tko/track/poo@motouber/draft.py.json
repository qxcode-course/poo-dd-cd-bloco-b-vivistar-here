{
    "patches": [
        {
            "label": "2025-10-26_20-29-26",
            "content": "@@ -1,2635 +0,0 @@\n-class Pessoa:%0A    def __init__(self, nome: str, dinheiro: float):%0A        self.__nome = nome%0A        self.__dinheiro = dinheiro%0A%0A    def getNome(self) -%3E str:%0A        return self.__nome%0A%0A    def getDinheiro(self) -%3E float:%0A        return self.__dinheiro%0A%0A    def pagar(self, value: float):%0A        if value %3E self.__dinheiro:%0A            valor_pago = self.__dinheiro%0A            self.__dinheiro = 0%0A            return valor_pago%0A        else:%0A            self.__dinheiro -= value%0A            return value%0A%0A    def receber(self, value: float):%0A        self.__dinheiro += value%0A%0A    def __str__(self):%0A        return f%22%7Bself.__nome%7D: R$ %7Bself.__dinheiro:.2f%7D%22%0A%0A%0A%0Aclass Moto:%0A    def __init__(self):%0A        self.__motorista = None%0A        self.__passageiro = None%0A        self.__custo = 0%0A%0A    def setMotorista(self, motorista: Pessoa):%0A        if motorista is not None:%0A            print(%22fail: ja existe motorista%22)%0A            return%0A        self.__motorista = motorista%0A%0A    def removerMotorista(self):%0A        if self.__motorista is None:%0A            print(%22fail: nao existe motorista%22)%0A            return%0A        self.__motorista = None%0A%0A    def subiuPassageiro(self, passageiro: Pessoa):%0A        if self.__motorista is None:%0A            print(%22fail: nao existe motorista%22)%0A            return%0A        if self.__passageiro is not None:%0A            print(%22fail: ja existe passageiro na moto%22)%0A            return%0A        self.__passageiro = passageiro%0A        self.__custo = 0%0A        print(f%22passageiro %7Bpassageiro.getNome()%7D subiu na moto%22)%0A%0A    def dirigir(self, km: float):%0A        if self.__passageiro is None:%0A            print(%22fail: nao existe passageiro na moto%22)%0A            return%0A        self.__custo += km%0A%0A    def descerPassageiro(self):%0A        if self.__passageiro is None:%0A            print(%22fail: nao ha passageiro pra descer%22)%0A            return%0A        print(f%22%7Bself.__passageiro.getNome()%7D desceu. Corrida custou R$%7Bself.__custo:.2f%7D%22)%0A        pago = self.__passageiro.pagar(self.__custo)%0A        self.__motorista.receber(self.__custo)%0A        if pago %3C self.__custo:%0A            print(f%22%7Bself.__passageiro.getNome()%7D pagou R$%7Bpago:.2f%7D, Uber completou o resto do valor%22)%0A        else:%0A            print(f%22%7Bself._passageiro.getNome()%7D pagou R$%7Bpago:.2f%7D%22)%0A        self.__passageiro = None%0A        self.__custo = 0%0A%0A    def __str__(self):%0A        motorista = self.__motorista.getNome() if self.__motorista is not None else %22nenhum%22%0A        passageiro = self.__passageiro.getNome() if self.__passageiro else %22nenhum%22%0A        print(f%22Motorista: %7Bmotorista%7D, Passageiro: %7Bpassageiro%7D, Custo: R$%7Bself.__custo:.2f%7D%22)%0A%0A%0A\n",
            "lines": "0"
        },
        {
            "label": "2025-10-26_21-06-11",
            "content": "@@ -2631,1216 +2631,5 @@\n %22)%0A%0A\n-def main():%0A    moto = Moto()%0A    pessoas =%7B%7D%0A%0A    while True:%0A        line = input()%0A        args = line.split()%0A        print(%22$%22 + line)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A%0A        elif args%5B0%5D == %22addPerson%22:%0A            nome = args%5B1%5D%0A            dinheiro = float(args%5B2%5D)%0A            pessoas%5Bnome%5D = Pessoa(nome, dinheiro)%0A%0A        elif args%5B0%5D == %22setMotorista%22:%0A            nome = args%5B1%5D%0A            if nome in pessoas:%0A                moto.setMotorista(pessoas%5Bnome%5D)%0A            else:%0A                print(%22fail: pessoa nao encontrada%22)%0A%0A        elif args%5B0%5D == %22rmMotorista%22:%0A            moto.removerMotorista()%0A%0A        elif args%5B0%5D == %22subir%22:%0A            nome = args%5B1%5D%0A            if nome in pessoas:%0A                moto.subiuPassageiro(pessoas%5Bnome%5D)%0A            else:%0A                print(%22fail: pessoa nao encontrada%22)%0A%0A        elif args%5B0%5D == %22dirigir%22:%0A            km = float(args%5B1%5D)%0A            moto.dirigir(km)%0A%0A        elif args%5B0%5D == %22descer%22:%0A            moto.descerPassageiro()%0A%0A        elif args%5B0%5D == %22show%22:%0A            if moto:%0A                print(moto)%0A            else:%0A                print(%22fail: moto nao inicializada%22)%0A%0A        else:%0A            %0A%0A%0Amain()\n %0A\n",
            "lines": "83"
        },
        {
            "label": "2025-10-26_22-33-22",
            "content": "@@ -3833,39 +3833,10 @@\n     \n-print(%22fail: comando invalido%22)\n+%0A%0A\n %0Amai\n",
            "lines": "134"
        },
        {
            "label": "2025-10-26_22-33-40",
            "content": "@@ -1,2563 +1,45 @@\n-class Pessoa:%0A    def __init__(self, nome: str, dinheiro: float):%0A        self.__nome = nome%0A        self.__dinheiro = dinheiro%0A%0A    def getNome(self) -%3E str:%0A        return self.__nome%0A%0A    def getDinheiro(self) -%3E float:%0A        return self.__dinheiro%0A%0A    def pagar(self, value: float):%0A        if value %3E self.__dinheiro:%0A            valor_pago = self.__dinheiro%0A            self.__dinheiro = 0%0A            return valor_pago%0A        else:%0A            self.__dinheiro -= value%0A            return value%0A%0A    def receber(self, value: float):%0A        self.__dinheiro += value%0A%0A    def __str__(self):%0A        return f%22%7Bself.__nome%7D: R$ %7Bself.__dinheiro:.2f%7D%22%0A%0A%0A%0Aclass Moto:%0A    def __init__(self):%0A        self.__motorista = None%0A        self.__passageiro = None%0A        self.__custo = 0%0A%0A    def setMotorista(self, motorista: Pessoa):%0A        if motorista is not None:%0A            print(%22fail: ja existe motorista%22)%0A            return%0A        self.__motorista = motorista%0A%0A    def removerMotorista(self):%0A        if self.__motorista is None:%0A            print(%22fail: nao existe motorista%22)%0A            return%0A        self.__motorista = None%0A%0A    def subiuPassageiro(self, passageiro: Pessoa):%0A        if self.__motorista is None:%0A            print(%22fail: nao existe motorista%22)%0A            return%0A        if self.__passageiro is not None:%0A            print(%22fail: ja existe passageiro na moto%22)%0A            return%0A        self.__passageiro = passageiro%0A        self.__custo = 0%0A        print(f%22passageiro %7Bpassageiro.getNome()%7D subiu na moto%22)%0A%0A    def dirigir(self, km: float):%0A        if self.__passageiro is None:%0A            print(%22fail: nao existe passageiro na moto%22)%0A            return%0A        self.__custo += km%0A%0A    def descerPassageiro(self):%0A        if self.__passageiro is None:%0A            print(%22fail: nao ha passageiro pra descer%22)%0A            return%0A        print(f%22%7Bself.__passageiro.getNome()%7D desceu. Corrida custou R$%7Bself.__custo:.2f%7D%22)%0A        pago = self.__passageiro.pagar(self.__custo)%0A        self.__motorista.receber(self.__custo)%0A        if pago %3C self.__custo:%0A            print(f%22%7Bself.__passageiro.getNome()%7D pagou R$%7Bpago:.2f%7D, Uber completou o resto do valor%22)%0A        else:%0A            print(f%22%7Bself._passageiro.getNome()%7D pagou R$%7Bpago:.2f%7D%22)%0A        self.__passageiro = None%0A        self.__custo = 0%0A%0A    def __str__(self):%0A        motorista = self.__motorista.getNome() if self.__motorista is not None else %22nenhum%22%0A        passageiro = self.__passageiro.getNome() if self.__passageiro else %22nenhum%22%0A        print(f%22\n+@@ -2550,30 +2550,29 @@%0A t(f%2522%0A-\n Cost:\n-%7B\n+%257B\n self\n@@ -54,1298 +54,38 @@\n :.2f\n-%7D, Driver: %7Bmotorista%7D, Passsenger: %7Bpassageiro%7D%7D%22)%0A%0Adef main():%0A    moto = Moto()%0A    pessoas =%7B%7D%0A%0A    while True:%0A        line = input()%0A        args = line.split()%0A        print(%22$%22 + line)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A%0A        elif args%5B0%5D == %22addPerson%22:%0A            nome = args%5B1%5D%0A            dinheiro = float(args%5B2%5D)%0A            pessoas%5Bnome%5D = Pessoa(nome, dinheiro)%0A%0A        elif args%5B0%5D == %22setMotorista%22:%0A            nome = args%5B1%5D%0A            if nome in pessoas:%0A                moto.setMotorista(pessoas%5Bnome%5D)%0A            else:%0A                print(%22fail: pessoa nao encontrada%22)%0A%0A        elif args%5B0%5D == %22rmMotorista%22:%0A            moto.removerMotorista()%0A%0A        elif args%5B0%5D == %22subir%22:%0A            nome = args%5B1%5D%0A            if nome in pessoas:%0A                moto.subiuPassageiro(pessoas%5Bnome%5D)%0A            else:%0A                print(%22fail: pessoa nao encontrada%22)%0A%0A        elif args%5B0%5D == %22dirigir%22:%0A            km = float(args%5B1%5D)%0A            moto.dirigir(km)%0A%0A        elif args%5B0%5D == %22descer%22:%0A            moto.descerPassageiro()%0A%0A        elif args%5B0%5D == %22show%22:%0A            if moto:%0A                print(moto)%0A            else:%0A                print(%22fail: moto nao inicializada%22)%0A%0A        else:%0A            print(%22fail: comando invalido%22)%0Amain()\n+%0A+Motorista: %257Bmotorista%0A %257D, P\n %0A\n",
            "lines": "5"
        },
        {
            "label": "2025-10-26_22-35-11",
            "content": "@@ -2616,16 +2616,17 @@\n sageiro%7D\n+%7D\n %22)%0A%0Adef \n",
            "lines": "132"
        },
        {
            "label": "2025-10-26_22-35-12",
            "content": "@@ -2438,20 +2438,22 @@\n e else %22\n-No\n ne\n+nhum\n %22%0A      \n",
            "lines": "132"
        },
        {
            "label": "2025-10-26_22-35-28",
            "content": "@@ -1,3864 +1,72 @@\n-class Pessoa:%0A    def __init__(self, nome: str, dinheiro: float):%0A        self.__nome = nome%0A        self.__dinheiro = dinheiro%0A%0A    def getNome(self) -%3E str:%0A        return self.__nome%0A%0A    def getDinheiro(self) -%3E float:%0A        return self.__dinheiro%0A%0A    def pagar(self, value: float):%0A        if value %3E self.__dinheiro:%0A            valor_pago = self.__dinheiro%0A            self.__dinheiro = 0%0A            return valor_pago%0A        else:%0A            self.__dinheiro -= value%0A            return value%0A%0A    def receber(self, value: float):%0A        self.__dinheiro += value%0A%0A    def __str__(self):%0A        return f%22%7Bself.__nome%7D: R$ %7Bself.__dinheiro:.2f%7D%22%0A%0A%0A%0Aclass Moto:%0A    def __init__(self):%0A        self.__motorista = None%0A        self.__passageiro = None%0A        self.__custo = 0%0A%0A    def setMotorista(self, motorista: Pessoa):%0A        if motorista is not None:%0A            print(%22fail: ja existe motorista%22)%0A            return%0A        self.__motorista = motorista%0A%0A    def removerMotorista(self):%0A        if self.__motorista is None:%0A            print(%22fail: nao existe motorista%22)%0A            return%0A        self.__motorista = None%0A%0A    def subiuPassageiro(self, passageiro: Pessoa):%0A        if self.__motorista is None:%0A            print(%22fail: nao existe motorista%22)%0A            return%0A        if self.__passageiro is not None:%0A            print(%22fail: ja existe passageiro na moto%22)%0A            return%0A        self.__passageiro = passageiro%0A        self.__custo = 0%0A        print(f%22passageiro %7Bpassageiro.getNome()%7D subiu na moto%22)%0A%0A    def dirigir(self, km: float):%0A        if self.__passageiro is None:%0A            print(%22fail: nao existe passageiro na moto%22)%0A            return%0A        self.__custo += km%0A%0A    def descerPassageiro(self):%0A        if self.__passageiro is None:%0A            print(%22fail: nao ha passageiro pra descer%22)%0A            return%0A        print(f%22%7Bself.__passageiro.getNome()%7D desceu. Corrida custou R$%7Bself.__custo:.2f%7D%22)%0A        pago = self.__passageiro.pagar(self.__custo)%0A        self.__motorista.receber(self.__custo)%0A        if pago %3C self.__custo:%0A            print(f%22%7Bself.__passageiro.getNome()%7D pagou R$%7Bpago:.2f%7D, Uber completou o resto do valor%22)%0A        else:%0A            print(f%22%7Bself._passageiro.getNome()%7D pagou R$%7Bpago:.2f%7D%22)%0A        self.__passageiro = None%0A        self.__custo = 0%0A%0A    def __str__(self):%0A        motorista = self.__motorista.getNome() if self.__motorista is not None else %22None%22%0A        passageiro = self.__passageiro.getNome() if self.__passageiro else %22None%22%0A        print(f%22Cost:%7Bself.__custo:.2f%7D, Driver: %7Bmotorista%7D, Passsenger: %7Bpassageiro%7D%22)%0A%0Adef main():%0A    moto = Moto()%0A    pessoas =%7B%7D%0A%0A    while True:%0A        line = input()%0A        args = line.split()%0A        print(%22$%22 + line)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A%0A        elif args%5B0%5D == %22addPerson%22:%0A            nome = args%5B1%5D%0A            dinheiro = float(args%5B2%5D)%0A            pessoas%5Bnome%5D = Pessoa(nome, dinheiro)%0A%0A        elif args%5B0%5D == %22setMotorista%22:%0A            nome = args%5B1%5D%0A            if nome in pessoas:%0A                moto.setMotorista(pessoas%5Bnome%5D)%0A            else:%0A                print(%22fail: pessoa nao encontrada%22)%0A%0A        elif args%5B0%5D == %22rmMotorista%22:%0A            moto.removerMotorista()%0A%0A        elif args%5B0%5D == %22subir%22:%0A            nome = args%5B1%5D%0A            if nome in pessoas:%0A                moto.subiuPassageiro(pessoas%5Bnome%5D)%0A            else:%0A                print(%22fail: pessoa nao encontrada%22)%0A%0A        elif args%5B0%5D == %22dirigir%22:%0A            km = float(args%5B1%5D)%0A            moto.dirigir(km)%0A%0A        elif args%5B0%5D == %22descer%22:%0A            moto.descerPassageiro()%0A%0A        elif args%5B0%5D == %22show%22:%0A            if moto:%0A                print(moto)%0A            else:%0A                print(%22fail: moto nao inicializada%22)%0A%0A        else:%0A            print(%22fail: comando invalido%22)%0Amain()\n+@@ -2516,28 +2516,30 @@%0A geiro else %2522%0A-No%0A ne%0A+nhum%0A %2522%250A        pr\n %0A\n",
            "lines": "6"
        },
        {
            "label": "2025-10-26_22-35-45",
            "content": "@@ -2563,16 +2563,17 @@\n custo:.2\n+f\n %7D, Drive\n",
            "lines": "132"
        },
        {
            "label": "2025-10-26_22-35-46",
            "content": "@@ -2563,17 +2563,16 @@\n custo:.2\n-f\n %7D, Drive\n",
            "lines": "132"
        },
        {
            "label": "2025-10-26_22-36-08",
            "content": "@@ -1,3865 +1,170 @@\n-class Pessoa:%0A    def __init__(self, nome: str, dinheiro: float):%0A        self.__nome = nome%0A        self.__dinheiro = dinheiro%0A%0A    def getNome(self) -%3E str:%0A        return self.__nome%0A%0A    def getDinheiro(self) -%3E float:%0A        return self.__dinheiro%0A%0A    def pagar(self, value: float):%0A        if value %3E self.__dinheiro:%0A            valor_pago = self.__dinheiro%0A            self.__dinheiro = 0%0A            return valor_pago%0A        else:%0A            self.__dinheiro -= value%0A            return value%0A%0A    def receber(self, value: float):%0A        self.__dinheiro += value%0A%0A    def __str__(self):%0A        return f%22%7Bself.__nome%7D: R$ %7Bself.__dinheiro:.2f%7D%22%0A%0A%0A%0Aclass Moto:%0A    def __init__(self):%0A        self.__motorista = None%0A        self.__passageiro = None%0A        self.__custo = 0%0A%0A    def setMotorista(self, motorista: Pessoa):%0A        if motorista is not None:%0A            print(%22fail: ja existe motorista%22)%0A            return%0A        self.__motorista = motorista%0A%0A    def removerMotorista(self):%0A        if self.__motorista is None:%0A            print(%22fail: nao existe motorista%22)%0A            return%0A        self.__motorista = None%0A%0A    def subiuPassageiro(self, passageiro: Pessoa):%0A        if self.__motorista is None:%0A            print(%22fail: nao existe motorista%22)%0A            return%0A        if self.__passageiro is not None:%0A            print(%22fail: ja existe passageiro na moto%22)%0A            return%0A        self.__passageiro = passageiro%0A        self.__custo = 0%0A        print(f%22passageiro %7Bpassageiro.getNome()%7D subiu na moto%22)%0A%0A    def dirigir(self, km: float):%0A        if self.__passageiro is None:%0A            print(%22fail: nao existe passageiro na moto%22)%0A            return%0A        self.__custo += km%0A%0A    def descerPassageiro(self):%0A        if self.__passageiro is None:%0A            print(%22fail: nao ha passageiro pra descer%22)%0A            return%0A        print(f%22%7Bself.__passageiro.getNome()%7D desceu. Corrida custou R$%7Bself.__custo:.2f%7D%22)%0A        pago = self.__passageiro.pagar(self.__custo)%0A        self.__motorista.receber(self.__custo)%0A        if pago %3C self.__custo:%0A            print(f%22%7Bself.__passageiro.getNome()%7D pagou R$%7Bpago:.2f%7D, Uber completou o resto do valor%22)%0A        else:%0A            print(f%22%7Bself._passageiro.getNome()%7D pagou R$%7Bpago:.2f%7D%22)%0A        self.__passageiro = None%0A        self.__custo = 0%0A%0A    def __str__(self):%0A        motorista = self.__motorista.getNome() if self.__motorista is not None else %22None%22%0A        passageiro = self.__passageiro.getNome() if self.__passageiro else %22None%22%0A        return f%22Cost:%7Bself.__custo:.2f%7D, Driver: %7Bmotorista%7D, Passsenger: %7Bpassageiro%7D%22)%0A%0Adef main():%0A    moto = Moto()%0A    pessoas =%7B%7D%0A%0A    while True:%0A        line = input()%0A        args = line.split()%0A        print(%22$%22 + line)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A%0A        elif args%5B0%5D == %22addPerson%22:%0A            nome = args%5B1%5D%0A            dinheiro = float(args%5B2%5D)%0A            pessoas%5Bnome%5D = Pessoa(nome, dinheiro)%0A%0A        elif args%5B0%5D == %22setMotorista%22:%0A            nome = args%5B1%5D%0A            if nome in pessoas:%0A                moto.setMotorista(pessoas%5Bnome%5D)%0A            else:%0A                print(%22fail: pessoa nao encontrada%22)%0A%0A        elif args%5B0%5D == %22rmMotorista%22:%0A            moto.removerMotorista()%0A%0A        elif args%5B0%5D == %22subir%22:%0A            nome = args%5B1%5D%0A            if nome in pessoas:%0A                moto.subiuPassageiro(pessoas%5Bnome%5D)%0A            else:%0A                print(%22fail: pessoa nao encontrada%22)%0A%0A        elif args%5B0%5D == %22dirigir%22:%0A            km = float(args%5B1%5D)%0A            moto.dirigir(km)%0A%0A        elif args%5B0%5D == %22descer%22:%0A            moto.descerPassageiro()%0A%0A        elif args%5B0%5D == %22show%22:%0A            if moto:%0A                print(moto)%0A            else:%0A                print(%22fail: moto nao inicializada%22)%0A%0A        else:%0A            print(%22fail: comando invalido%22)%0Amain()\n+@@ -2538,23 +2538,22 @@%0A     %0A-return %0A+print(%0A f%2522Cost:%257B%0A int(%0A@@ -2548,20 +2548,16 @@%0A f%2522Cost:%257B%0A-int(%0A self.__c%0A@@ -2564,17 +2564,16 @@%0A usto:.2f%0A-)%0A %257D, Drive\n %0A\n",
            "lines": "14"
        },
        {
            "label": "2025-10-26_22-39-02",
            "content": "@@ -2614,16 +2614,17 @@\n ageiro%7D%22\n+)\n %0A%0Adef ma\n",
            "lines": "132"
        },
        {
            "label": "2025-10-26_22-39-26",
            "content": "@@ -2548,17 +2548,16 @@\n  f%22Cost:\n- \n %7Bself.__\n",
            "lines": "132"
        },
        {
            "label": "2025-10-26_22-39-36",
            "content": "@@ -1,1330 +1,161 @@\n-class Pessoa:%0A    def __init__(self, nome: str, dinheiro: float):%0A        self.__nome = nome%0A        self.__dinheiro = dinheiro%0A%0A    def getNome(self) -%3E str:%0A        return self.__nome%0A%0A    def getDinheiro(self) -%3E float:%0A        return self.__dinheiro%0A%0A    def pagar(self, value: float):%0A        if value %3E self.__dinheiro:%0A            valor_pago = self.__dinheiro%0A            self.__dinheiro = 0%0A            return valor_pago%0A        else:%0A            self.__dinheiro -= value%0A            return value%0A%0A    def receber(self, value: float):%0A        self.__dinheiro += value%0A%0A    def __str__(self):%0A        return f%22%7Bself.__nome%7D: R$ %7Bself.__dinheiro:.2f%7D%22%0A%0A%0A%0Aclass Moto:%0A    def __init__(self):%0A        self.__motorista = None%0A        self.__passageiro = None%0A        self.__custo = 0%0A%0A    def setMotorista(self, motorista: Pessoa):%0A        if motorista is not None:%0A            print(%22fail: ja existe motorista%22)%0A            return%0A        self.__motorista = motorista%0A%0A    def removerMotorista(self):%0A        if self.__motorista is None:%0A            print(%22fail: nao existe motorista%22)%0A            return%0A        self.__motorista = None%0A%0A    def subiuPassageiro(self, passageiro: Pessoa):%0A        if self.__motorista is None:%0A            print(%22fail: nao existe motorista%22)%0A            return%0A        if self.__pas\n+@@ -2349,24 +2349,28 @@%0A tr__(self):%250A%0A+    %0A     motorist%0A@@ -2440,24 +2440,28 @@%0A else %2522None%2522%250A%0A+    %0A     passagei%0A@@ -2514,28 +2514,16 @@%0A \n sageiro \n is n\n@@ -142,32 +142,34 @@\n ,16 @@%0A sageiro \n+%0A-\n is not None:%0A   \n@@ -167,2545 +167,242 @@\n None\n-:%0A            print(%22fail: ja existe passageiro na moto%22)%0A            return%0A        self.__passageiro = passageiro%0A        self.__custo = 0%0A        print(f%22passageiro %7Bpassageiro.getNome()%7D subiu na moto%22)%0A%0A    def dirigir(self, km: float):%0A        if self.__passageiro is None:%0A            print(%22fail: nao existe passageiro na moto%22)%0A            return%0A        self.__custo += km%0A%0A    def descerPassageiro(self):%0A        if self.__passageiro is None:%0A            print(%22fail: nao ha passageiro pra descer%22)%0A            return%0A        print(f%22%7Bself.__passageiro.getNome()%7D desceu. Corrida custou R$%7Bself.__custo:.2f%7D%22)%0A        pago = self.__passageiro.pagar(self.__custo)%0A        self.__motorista.receber(self.__custo)%0A        if pago %3C self.__custo:%0A            print(f%22%7Bself.__passageiro.getNome()%7D pagou R$%7Bpago:.2f%7D, Uber completou o resto do valor%22)%0A        else:%0A            print(f%22%7Bself._passageiro.getNome()%7D pagou R$%7Bpago:.2f%7D%22)%0A        self.__passageiro = None%0A        self.__custo = 0%0A%0A    def __str__(self):%0A        motorista = self.__motorista.getNome() if self.__motorista is not None else %22None%22%0A        passageiro = self.__passageiro.getNome() if self.__passageiro is not None else %22None%22%0A        return f%22Cost: %7Bint(self.__custo)%7D, Driver: %7Bmotorista%7D, Passenger: %7Bpassageiro%7D%22%0A%0A%0Adef main():%0A    moto = Moto()%0A    pessoas =%7B%7D%0A%0A    while True:%0A        line = input()%0A        args = line.split()%0A        print(%22$%22 + line)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A%0A        elif args%5B0%5D == %22addPerson%22:%0A            nome = args%5B1%5D%0A            dinheiro = float(args%5B2%5D)%0A            pessoas%5Bnome%5D = Pessoa(nome, dinheiro)%0A%0A        elif args%5B0%5D == %22setMotorista%22:%0A            nome = args%5B1%5D%0A            if nome in pessoas:%0A                moto.setMotorista(pessoas%5Bnome%5D)%0A            else:%0A                print(%22fail: pessoa nao encontrada%22)%0A%0A        elif args%5B0%5D == %22rmMotorista%22:%0A            moto.removerMotorista()%0A%0A        elif args%5B0%5D == %22subir%22:%0A            nome = args%5B1%5D%0A            if nome in pessoas:%0A                moto.subiuPassageiro(pessoas%5Bnome%5D)%0A            else:%0A                print(%22fail: pessoa nao encontrada%22)%0A%0A        elif args%5B0%5D == %22dirigir%22:%0A            km = float(args%5B1%5D)%0A            moto.dirigir(km)%0A%0A        elif args%5B0%5D == %22descer%22:%0A            moto.descerPassageiro()%0A%0A        elif args%5B0%5D == %22show%22:%0A            if moto:%0A                print(moto)%0A            else:%0A                print(%22fail: moto nao inicializada%22)%0A%0A        else:%0A            print(%22fail: comando invalido%22)%0Amain()\n+ %0A else %2522No%0A@@ -2522,24 +2522,28 @@%0A else %2522None%2522%250A%0A+    %0A     return f%0A@@ -2550,20 +2550,16 @@%0A %2522Cost: %257B%0A-int(%0A self.__c%0A@@ -2562,17 +2562,20 @@%0A .__custo%0A-)%0A+:.2f%0A %257D, Drive%0A@@ -2594,16 +2594,17 @@%0A a%257D, Pass%0A+s%0A enger: %257B\n %0A\n",
            "lines": "29"
        },
        {
            "label": "2025-10-26_22-40-41",
            "content": "@@ -3001,22 +3001,25 @@\n  == %22set\n-Driver\n+Motorista\n %22:%0A     \n@@ -3056,34 +3056,32 @@\n     \n-dinheiro = float(args%5B2%5D)%0A\n+if nome in pessoas:%0A    \n     \n",
            "lines": "133"
        },
        {
            "label": "2025-10-26_22-45-40",
            "content": "@@ -1,3853 +1,133 @@\n-class Pessoa:%0A    def __init__(self, nome: str, dinheiro: float):%0A        self.__nome = nome%0A        self.__dinheiro = dinheiro%0A%0A    def getNome(self) -%3E str:%0A        return self.__nome%0A%0A    def getDinheiro(self) -%3E float:%0A        return self.__dinheiro%0A%0A    def pagar(self, value: float):%0A        if value %3E self.__dinheiro:%0A            valor_pago = self.__dinheiro%0A            self.__dinheiro = 0%0A            return valor_pago%0A        else:%0A            self.__dinheiro -= value%0A            return value%0A%0A    def receber(self, value: float):%0A        self.__dinheiro += value%0A%0A    def __str__(self):%0A        return f%22%7Bself.__nome%7D: R$ %7Bself.__dinheiro:.2f%7D%22%0A%0A%0A%0Aclass Moto:%0A    def __init__(self):%0A        self.__motorista = None%0A        self.__passageiro = None%0A        self.__custo = 0%0A%0A    def setMotorista(self, motorista: Pessoa):%0A        if motorista is not None:%0A            print(%22fail: ja existe motorista%22)%0A            return%0A        self.__motorista = motorista%0A%0A    def removerMotorista(self):%0A        if self.__motorista is None:%0A            print(%22fail: nao existe motorista%22)%0A            return%0A        self.__motorista = None%0A%0A    def subiuPassageiro(self, passageiro: Pessoa):%0A        if self.__motorista is None:%0A            print(%22fail: nao existe motorista%22)%0A            return%0A        if self.__passageiro is not None:%0A            print(%22fail: ja existe passageiro na moto%22)%0A            return%0A        self.__passageiro = passageiro%0A        self.__custo = 0%0A        print(f%22passageiro %7Bpassageiro.getNome()%7D subiu na moto%22)%0A%0A    def dirigir(self, km: float):%0A        if self.__passageiro is None:%0A            print(%22fail: nao existe passageiro na moto%22)%0A            return%0A        self.__custo += km%0A%0A    def descerPassageiro(self):%0A        if self.__passageiro is None:%0A            print(%22fail: nao ha passageiro pra descer%22)%0A            return%0A        print(f%22%7Bself.__passageiro.getNome()%7D desceu. Corrida custou R$%7Bself.__custo:.2f%7D%22)%0A        pago = self.__passageiro.pagar(self.__custo)%0A        self.__motorista.receber(self.__custo)%0A        if pago %3C self.__custo:%0A            print(f%22%7Bself.__passageiro.getNome()%7D pagou R$%7Bpago:.2f%7D, Uber completou o resto do valor%22)%0A        else:%0A            print(f%22%7Bself._passageiro.getNome()%7D pagou R$%7Bpago:.2f%7D%22)%0A        self.__passageiro = None%0A        self.__custo = 0%0A%0A    def __str__(self):%0A        motorista = self.__motorista.getNome() if self.__motorista is not None else %22None%22%0A        passageiro = self.__passageiro.getNome() if self.__passageiro is not None else %22None%22%0A        return f%22Cost: %7Bint(self.__custo)%7D, Driver: %7Bmotorista%7D, Passenger: %7Bpassageiro%7D%22%0A%0A%0Adef main():%0A    moto = Moto()%0A    pessoas =%7B%7D%0A%0A    while True:%0A        line = input()%0A        args = line.split()%0A        print(%22$%22 + line)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A%0A        elif args%5B0%5D == %22addPerson%22:%0A            nome = args%5B1%5D%0A            dinheiro = float(args%5B2%5D)%0A            pessoas%5Bnome%5D = Pessoa(nome, dinheiro)%0A%0A        elif args%5B0%5D == %22setDriver%22:%0A            nome = args%5B1%5D%0A            dinheiro = float(args%5B2%5D)%0A            motorista = Pessoa(nome, dinheiro)%0A            moto.setMotorista(pessoas%5Bnome%5D)%0A%0A        elif args%5B0%5D == %22rmMotorista%22:%0A            moto.removerMotorista()%0A%0A        elif args%5B0%5D == %22subir%22:%0A            nome = args%5B1%5D%0A            if nome in pessoas:%0A                moto.subiuPassageiro(pessoas%5Bnome%5D)%0A            else:%0A                print(%22fail: pessoa nao encontrada%22)%0A%0A        elif args%5B0%5D == %22dirigir%22:%0A            km = float(args%5B1%5D)%0A            moto.dirigir(km)%0A%0A        elif args%5B0%5D == %22descer%22:%0A            moto.descerPassageiro()%0A%0A        elif args%5B0%5D == %22show%22:%0A            if moto:%0A                print(moto)%0A            else:%0A                print(%22fail: moto nao inicializada%22)%0A%0A        else:%0A            print(%22fail: comando invalido%22)%0Amain()\n+@@ -3119,16 +3119,87 @@%0A s%255Bnome%255D)%0A+%250A            else:%250A                print(%2522fail: pessoa nao encontrada%2522)%0A %250A%250A      \n %0A\n",
            "lines": "4"
        },
        {
            "label": "2025-10-26_22-47-04",
            "content": "@@ -831,39 +831,32 @@\n oa):%0A        if \n-self.__\n motorista is not\n",
            "lines": "132"
        },
        {
            "label": "2025-10-26_22-48-33",
            "content": "@@ -2227,33 +2227,32 @@\n  print(f%22%7Bself._\n-_\n passageiro.getNo\n",
            "lines": "132"
        },
        {
            "label": "2025-10-26_22-49-03",
            "content": "@@ -3160,25 +3160,29 @@\n torista(\n-motorista\n+pessoas%5Bnome%5D\n )%0A%0A     \n",
            "lines": "132"
        },
        {
            "label": "2025-10-26_22-50-28",
            "content": "@@ -2609,17 +2609,17 @@\n torista%7D\n-:\n+,\n  Passeng\n",
            "lines": "132"
        },
        {
            "label": "2025-10-26_22-51-15",
            "content": "@@ -2609,17 +2609,17 @@\n torista%7D\n-,\n+:\n  Passeng\n",
            "lines": "132"
        },
        {
            "label": "2025-10-26_22-51-26",
            "content": "@@ -2597,16 +2597,17 @@\n  Driver:\n+ \n %7Bmotoris\n",
            "lines": "132"
        },
        {
            "label": "2025-10-26_22-51-50",
            "content": "@@ -1,3859 +1,49 @@\n-class Pessoa:%0A    def __init__(self, nome: str, dinheiro: float):%0A        self.__nome = nome%0A        self.__dinheiro = dinheiro%0A%0A    def getNome(self) -%3E str:%0A        return self.__nome%0A%0A    def getDinheiro(self) -%3E float:%0A        return self.__dinheiro%0A%0A    def pagar(self, value: float):%0A        if value %3E self.__dinheiro:%0A            valor_pago = self.__dinheiro%0A            self.__dinheiro = 0%0A            return valor_pago%0A        else:%0A            self.__dinheiro -= value%0A            return value%0A%0A    def receber(self, value: float):%0A        self.__dinheiro += value%0A%0A    def __str__(self):%0A        return f%22%7Bself.__nome%7D: R$ %7Bself.__dinheiro:.2f%7D%22%0A%0A%0A%0Aclass Moto:%0A    def __init__(self):%0A        self.__motorista = None%0A        self.__passageiro = None%0A        self.__custo = 0%0A%0A    def setMotorista(self, motorista: Pessoa):%0A        if self.__motorista is not None:%0A            print(%22fail: ja existe motorista%22)%0A            return%0A        self.__motorista = motorista%0A%0A    def removerMotorista(self):%0A        if self.__motorista is None:%0A            print(%22fail: nao existe motorista%22)%0A            return%0A        self.__motorista = None%0A%0A    def subiuPassageiro(self, passageiro: Pessoa):%0A        if self.__motorista is None:%0A            print(%22fail: nao existe motorista%22)%0A            return%0A        if self.__passageiro is not None:%0A            print(%22fail: ja existe passageiro na moto%22)%0A            return%0A        self.__passageiro = passageiro%0A        self.__custo = 0%0A        print(f%22passageiro %7Bpassageiro.getNome()%7D subiu na moto%22)%0A%0A    def dirigir(self, km: float):%0A        if self.__passageiro is None:%0A            print(%22fail: nao existe passageiro na moto%22)%0A            return%0A        self.__custo += km%0A%0A    def descerPassageiro(self):%0A        if self.__passageiro is None:%0A            print(%22fail: nao ha passageiro pra descer%22)%0A            return%0A        print(f%22%7Bself.__passageiro.getNome()%7D desceu. Corrida custou R$%7Bself.__custo:.2f%7D%22)%0A        pago = self.__passageiro.pagar(self.__custo)%0A        self.__motorista.receber(self.__custo)%0A        if pago %3C self.__custo:%0A            print(f%22%7Bself.__passageiro.getNome()%7D pagou R$%7Bpago:.2f%7D, Uber completou o resto do valor%22)%0A        else:%0A            print(f%22%7Bself.__passageiro.getNome()%7D pagou R$%7Bpago:.2f%7D%22)%0A        self.__passageiro = None%0A        self.__custo = 0%0A%0A    def __str__(self):%0A        motorista = self.__motorista.getNome() if self.__motorista is not None else %22None%22%0A        passageiro = self.__passageiro.getNome() if self.__passageiro is not None else %22None%22%0A        return f%22Cost: %7Bint(self.__custo)%7D, Driver: (%7Bmotorista%7D), Passenger: %7Bpassageiro%7D%22%0A%0A%0Adef main():%0A    moto = Moto()%0A    pessoas =%7B%7D%0A%0A    while True:%0A        line = input()%0A        args = line.split()%0A        print(%22$%22 + line)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A%0A        elif args%5B0%5D == %22addPerson%22:%0A            nome = args%5B1%5D%0A            dinheiro = float(args%5B2%5D)%0A            pessoas%5Bnome%5D = Pessoa(nome, dinheiro)%0A%0A        elif args%5B0%5D == %22set\n+@@ -2597,17 +2597,16 @@%0A  \n Driver\n-%22\n :%0A\n-            nome = args%5B1%5D%0A            dinheiro = float(args%5B2%5D)%0A            motorista = Pessoa(nome, dinheiro)%0A            moto.setMotorista(motorista)%0A%0A        elif args%5B0%5D == %22rmMotorista%22:%0A            moto.removerMotorista()%0A%0A        elif args%5B0%5D == %22subir%22:%0A            nome = args%5B1%5D%0A            if nome in pessoas:%0A                moto.subiuPassageiro(pessoas%5Bnome%5D)%0A            else:%0A                print(%22fail: pessoa nao encontrada%22)%0A%0A        elif args%5B0%5D == %22dirigir%22:%0A            km = float(args%5B1%5D)%0A            moto.dirigir(km)%0A%0A        elif args%5B0%5D == %22descer%22:%0A            moto.descerPassageiro()%0A%0A        elif args%5B0%5D == %22show%22:%0A            if moto:%0A                print(moto)%0A            else:%0A                print(%22fail: moto nao inicializada%22)%0A%0A        else:%0A            print(%22fail: comando invalido%22)%0Amain()\n+- %0A %257Bmotoris\n %0A\n",
            "lines": "4"
        },
        {
            "label": "2025-10-26_22-52-29",
            "content": "@@ -1,4038 +1,98 @@\n-class Pessoa:%0A    def __init__(self, nome: str, dinheiro: float):%0A        self.__nome = nome%0A        self.__dinheiro = dinheiro%0A%0A    def getNome(self) -%3E str:%0A        return self.__nome%0A%0A    def getDinheiro(self) -%3E float:%0A        return self.__dinheiro%0A%0A    def pagar(self, value: float):%0A        if value %3E self.__dinheiro:%0A            valor_pago = self.__dinheiro%0A            self.__dinheiro = 0%0A            return valor_pago%0A        else:%0A            self.__dinheiro -= value%0A            return value%0A%0A    def receber(self, value: float):%0A        self.__dinheiro += value%0A%0A    def __str__(self):%0A        return f%22%7Bself.__nome%7D: R$ %7Bself.__dinheiro:.2f%7D%22%0A%0A%0A%0Aclass Moto:%0A    def __init__(self):%0A        self.__motorista = None%0A        self.__passageiro = None%0A        self.__custo = 0%0A%0A    def setMotorista(self, motorista: Pessoa):%0A        if self.__motorista is not None:%0A            print(%22fail: ja existe motorista%22)%0A            return%0A        self.__motorista = motorista%0A%0A    def removerMotorista(self):%0A        if self.__motorista is None:%0A            print(%22fail: nao existe motorista%22)%0A            return%0A        self.__motorista = None%0A%0A    def subiuPassageiro(self, passageiro: Pessoa):%0A        if self.__motorista is None:%0A            print(%22fail: nao existe motorista%22)%0A            return%0A        if self.__passageiro is not None:%0A            print(%22fail: ja existe passageiro na moto%22)%0A            return%0A        self.__passageiro = passageiro%0A        self.__custo = 0%0A        print(f%22passageiro %7Bpassageiro.getNome()%7D subiu na moto%22)%0A%0A    def dirigir(self, km: float):%0A        if self.__passageiro is None:%0A            print(%22fail: nao existe passageiro na moto%22)%0A            return%0A        self.__custo += km%0A%0A    def descerPassageiro(self):%0A        if self.__passageiro is None:%0A            print(%22fail: nao ha passageiro pra descer%22)%0A            return%0A        print(f%22%7Bself.__passageiro.getNome()%7D desceu. Corrida custou R$%7Bself.__custo:.2f%7D%22)%0A        pago = self.__passageiro.pagar(self.__custo)%0A        self.__motorista.receber(self.__custo)%0A        if pago %3C self.__custo:%0A            print(f%22%7Bself.__passageiro.getNome()%7D pagou R$%7Bpago:.2f%7D, Uber completou o resto do valor%22)%0A        else:%0A            print(f%22%7Bself.__passageiro.getNome()%7D pagou R$%7Bpago:.2f%7D%22)%0A        self.__passageiro = None%0A        self.__custo = 0%0A%0A    def __str__(self):%0A        if self.__motorista is not None:%0A            motorista = f%22%7Bself.__motorista.getNome()%7D:%7Bint(self.__motorista.getDinheiro())%7D%22%0A        else:%0A            motorista = %22None%22%0A%0A        if self.__passageiro is not None:%0A            passageiro = f%22%7Bself.__passageiro.getNome()%7D:%7Bint(self.__passageiro.getDinheiro())%7D%22%0A        else:%0A            passageiro = %22None%22%0A        return f%22Cost: %7Bint(self.__custo)%7D, Driver: %7Bmotorista%7D, Passenger: %7Bpassageiro%7D%22%0A%0A%0Adef main():%0A    moto = Moto()%0A    pessoas =%7B%7D%0A%0A    while True:%0A        line = input()%0A        args = line.split()%0A        print(%22$%22 + line)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A%0A        elif args%5B0%5D == %22addPerson%22:%0A            nome = args%5B1%5D%0A            dinheiro = float(args%5B2%5D)%0A            pessoas%5Bnome%5D = Pessoa(nome, dinheiro)%0A%0A        elif args%5B0%5D == %22setDriver%22:%0A            nome = args%5B1%5D%0A            dinheiro = float(args%5B2%5D)%0A            motorista = Pessoa(nome, dinheiro)%0A            moto.setMotorista(motorista)%0A%0A        elif args%5B0%5D == %22rmMotorista%22:%0A            moto.removerMotorista()%0A%0A        elif args%5B0%5D == %22subir%22:%0A            nome = args%5B1%5D%0A            if nome in pessoas:%0A                moto.subiuPassageiro(pessoas%5Bnome%5D)%0A            else:%0A                print(%22fail: pessoa nao encontrada%22)%0A%0A        elif args%5B0%5D == %22dirigir%22:%0A            km = float(args%5B1%5D)%0A            moto.dirigir(km)%0A%0A        elif args%5B0%5D == %22descer%22:%0A            moto.descerPassageiro()%0A%0A        elif args%5B0%5D == %22show%22:%0A            if moto:%0A                print(moto)%0A            else:%0A                print(%22fail: moto nao inicializada%22)%0A%0A        else:%0A            print(%22fail: comando invalido%22)%0Amain()\n+@@ -2598,16 +2598,17 @@%0A Driver: %0A+(%0A %257Bmotoris%0A@@ -2610,16 +2610,17 @@%0A torista%257D%0A+)%0A , Passen\n %0A\n",
            "lines": "8"
        },
        {
            "label": "2025-10-26_22-56-49",
            "content": "@@ -2929,26 +2929,8 @@\n ine.\n-replace(%22$%22, %22 %22).\n spli\n",
            "lines": "139"
        },
        {
            "label": "2025-10-27_21-47-24",
            "content": "@@ -2925,16 +2925,34 @@\n  = line.\n+replace(%22$%22, %22 %22).\n split()%0A\n@@ -3477,14 +3477,12 @@\n = %22s\n-etPass\n+ubir\n %22:%0A \n@@ -3689,20 +3689,22 @@\n 0%5D == %22d\n+i\n ri\n-ve\n+gir\n %22:%0A     \n@@ -3789,17 +3789,14 @@\n == %22\n-leavePass\n+descer\n %22:%0A \n",
            "lines": "139"
        },
        {
            "label": "2025-10-27_21-49-43",
            "content": "@@ -3280,61 +3280,17 @@\n     \n-if nome not in pessoas:%0A                pessoas%5Bnome%5D\n+motorista\n  = P\n@@ -3341,29 +3341,25 @@\n torista(\n-pessoas%5Bnome%5D\n+motorista\n )%0A%0A     \n@@ -3507,46 +3507,150 @@\n     \n-dinheiro = float(args%5B2%5D)%0A            \n+if nome in pessoas:%0A                moto.subiuPassageiro(pessoas%5Bnome%5D)%0A            else:%0A                print(%22fail: pessoa nao encontrada%22)\n %0A%0A  \n",
            "lines": "139"
        },
        {
            "label": "2025-10-27_21-53-29",
            "content": "@@ -3593,134 +3593,8 @@\n     \n-if nome not in pessoas:%0A                pessoas%5Bnome%5D = Pessoa(nome, dinheiro)%0A            moto.subiuPassageiro(pessoas%5Bnome%5D)\n %0A%0A  \n",
            "lines": "138"
        },
        {
            "label": "2025-10-27_21-53-30",
            "content": "@@ -1469,32 +1469,98 @@\n self.__custo = 0\n+%0A        print(f%22passageiro %7Bpassageiro.getNome()%7D subiu na moto%22)\n %0A%0A    def dirigi\n",
            "lines": "140"
        },
        {
            "label": "2025-10-27_21-55-11",
            "content": "@@ -624,16 +624,17 @@\n __nome%7D:\n+ \n R$ %7Bself\n",
            "lines": "139"
        },
        {
            "label": "2025-10-27_21-56-15",
            "content": "@@ -626,16 +626,17 @@\n nome%7D:R$\n+ \n %7Bself.__\n",
            "lines": "139"
        },
        {
            "label": "2025-10-27_21-56-18",
            "content": "@@ -1697,143 +1697,476 @@\n     \n-pago = self.__passageiro.pagar(self.__custo)%0A        self.__motorista.receber(pago)%0A        print(f%22%7Bself.__passageiro.getNome()%7D:%7B\n+if self.__passageiro is None:%0A            print(%22fail: nao ha passageiro pra descer%22)%0A            return%0A        print(f%22%7Bself.__passageiro.getNome()%7D desceu. Corrida custou R$%7Bself.__custo:.2f%7D%22)%0A        pago = self.__passageiro.pagar(self.__custo)%0A        self.__motorista.receber(self.__custo)%0A        if pago %3C self.__custo:%0A            print(f%22%7Bself.__passageiro.getNome()%7D pagou R$%7Bpago:.2f%7D, Uber completou o resto do valor%22)%0A        else:%0A            pr\n int(\n+f%22%7B\n self\n@@ -2186,27 +2186,94 @@\n .get\n-Dinheiro\n+Nome\n ()\n-)\n %7D \n-left%22)\n+pagou R$%7Bpago:.2f%7D%22)%0A        self.__passageiro = None%0A        self.__custo = 0\n %0A%0A  \n",
            "lines": "139"
        },
        {
            "label": "2025-10-27_21-59-15",
            "content": "@@ -1689,122 +1689,8 @@\n f):%0A\n-        if self.__passageiro is None:%0A            print(%22fail: nao existe passageiro na moto%22)%0A            return%0A\n     \n@@ -1872,71 +1872,8 @@\n ft%22)\n-%0A        self.__passageiro = None%0A        self.__custo = 0%0A    \n %0A%0A  \n",
            "lines": "130"
        },
        {
            "label": "2025-10-27_22-01-10",
            "content": "@@ -1803,149 +1803,8 @@\n urn%0A\n-        if self.__passageiro.getDinheir() %3C self.__custo:%0A            print(%22fail:%7Bself.__passageiro.getNome()%7D does not have enough money%22)%0A\n     \n@@ -2045,18 +2045,8 @@\n = 0%0A\n-         %0A\n     \n",
            "lines": "136"
        },
        {
            "label": "2025-10-27_22-03-45",
            "content": "@@ -1940,35 +1940,16 @@\n money%22)%0A\n-            return%0A\n         \n",
            "lines": "139"
        },
        {
            "label": "2025-10-27_22-03-47",
            "content": "@@ -1791,32 +1791,192 @@\n          return%0A\n+        if self.__passageiro.getDinheir() %3C self.__custo:%0A            print(%22fail:%7Bself.__passageiro.getNome()%7D does not have enough money%22)%0A            return%0A\n         pago = s\n",
            "lines": "140"
        },
        {
            "label": "2025-10-27_22-04-04",
            "content": "@@ -1,1810 +1,37 @@\n-class Pessoa:%0A    def __init__(self, nome: str, dinheiro: float):%0A        self.__nome = nome%0A        self.__dinheiro = dinheiro%0A%0A    def getNome(self) -%3E str:%0A        return self.__nome%0A%0A    def getDinheiro(self) -%3E float:%0A        return self.__dinheiro%0A%0A    def pagar(self, value: float):%0A        if value %3E self.__dinheiro:%0A            valor_pago = self.__dinheiro%0A            self.__dinheiro = 0%0A            return valor_pago%0A        else:%0A            self.__dinheiro -= value%0A            return value%0A%0A    def receber(self, value: float):%0A        self.__dinheiro += value%0A%0A    def __str__(self):%0A        return f%22%7Bself.__nome%7D:R$%7Bself.__dinheiro:.2f%7D%22%0A%0A%0A%0Aclass Moto:%0A    def __init__(self):%0A        self.__motorista = None%0A        self.__passageiro = None%0A        self.__custo = 0%0A%0A    def setMotorista(self, motorista: Pessoa):%0A        if self.__motorista is not None:%0A            print(%22fail: ja existe motorista%22)%0A            return%0A        self.__motorista = motorista%0A%0A    def removerMotorista(self):%0A        if self.__motorista is None:%0A            print(%22fail: nao existe motorista%22)%0A            return%0A        self.__motorista = None%0A%0A    def subiuPassageiro(self, passageiro: Pessoa):%0A        if self.__motorista is None:%0A            print(%22fail: nao existe motorista%22)%0A            return%0A        if self.__passageiro is not None:%0A            print(%22fail: ja existe passageiro na moto%22)%0A            return%0A        self.__passageiro = passageiro%0A        self.__custo = 0%0A%0A    def dirigir(self, km: float):%0A        if self.__passageiro is None:%0A            print(%22fail: nao existe passageiro na moto%22)%0A            return%0A        self.__custo += km%0A%0A    def descerPassageiro(self):%0A        if self.__passageiro is None:%0A            print(%22fail: nao existe passageiro na moto%22)%0A            return%0A\n+@@ -1803,150 +1803,8 @@%0A urn%250A%0A-\n     \n@@ -73,9 +73,11 @@\n o() \n-%3C\n+%253C\n  sel\n@@ -86,17 +86,19 @@\n __custo:\n-%0A\n+%250A\n         \n@@ -111,2074 +111,86 @@\n int(\n-%22\n+%2522\n fail:\n- Passenger does not have enough money%22)%0A        pago = self.__passageiro.pagar(self.__custo)%0A        self.__motorista.receber(pago)%0A        print(f%22%7Bself.__passageiro.getNome()%7D:%7Bint(self.__passageiro.getDinheiro())%7D left%22)%0A        self.__passageiro = None%0A        self.__custo = 0%0A         %0A    %0A%0A    def __str__(self):%0A        if self.__motorista is not None:%0A            motorista = f%22%7Bself.__motorista.getNome()%7D:%7Bint(self.__motorista.getDinheiro())%7D%22%0A        else:%0A            motorista = %22None%22%0A%0A        if self.__passageiro is not None:%0A            passageiro = f%22%7Bself.__passageiro.getNome()%7D:%7Bint(self.__passageiro.getDinheiro())%7D%22%0A        else:%0A            passageiro = %22None%22%0A        return f%22Cost: %7Bint(self.__custo)%7D, Driver: %7Bmotorista%7D, Passenger: %7Bpassageiro%7D%22%0A%0A%0Adef main():%0A    moto = Moto()%0A    pessoas =%7B%7D%0A%0A    while True:%0A        line = input()%0A        args = line.split()%0A        print(%22$%22 + line)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A%0A        elif args%5B0%5D == %22addPerson%22:%0A            nome = args%5B1%5D%0A            dinheiro = float(args%5B2%5D)%0A            pessoas%5Bnome%5D = Pessoa(nome, dinheiro)%0A%0A        elif args%5B0%5D == %22setDriver%22:%0A            nome = args%5B1%5D%0A            dinheiro = float(args%5B2%5D)%0A            if nome not in pessoas:%0A                pessoas%5Bnome%5D = Pessoa(nome, dinheiro)%0A            moto.setMotorista(pessoas%5Bnome%5D)%0A%0A        elif args%5B0%5D == %22rmMotorista%22:%0A            moto.removerMotorista()%0A%0A        elif args%5B0%5D == %22setPass%22:%0A            nome = args%5B1%5D%0A            dinheiro = float(args%5B2%5D)%0A            if nome not in pessoas:%0A                pessoas%5Bnome%5D = Pessoa(nome, dinheiro)%0A            moto.subiuPassageiro(pessoas%5Bnome%5D)%0A%0A        elif args%5B0%5D == %22drive%22:%0A            km = float(args%5B1%5D)%0A            moto.dirigir(km)%0A%0A        elif args%5B0%5D == %22leavePass%22:%0A            moto.descerPassageiro()%0A%0A        elif args%5B0%5D == %22show%22:%0A            if moto:%0A                print(moto)%0A            else:%0A                print(%22fail: moto nao inicializada%22)%0A%0A        else:%0A            print(%22fail: comando invalido%22)%0Amain()\n+%257Bself.__passageiro.getNome()%257D does not have enough money%2522)%250A%0A     \n %0A\n",
            "lines": "4"
        },
        {
            "label": "2025-10-27_22-05-56",
            "content": "@@ -1922,35 +1922,16 @@\n money%22)%0A\n-            return%0A\n         \n",
            "lines": "139"
        },
        {
            "label": "2025-10-27_22-07-11",
            "content": "@@ -1940,32 +1940,39 @@\n   return%0A       \n+ pago =\n  self.__passagei\n@@ -2027,34 +2027,22 @@\n receber(\n-self.__custo)%0A    \n+pago)%0A\n         \n",
            "lines": "140"
        },
        {
            "label": "2025-10-27_22-08-01",
            "content": "@@ -1952,15 +1952,8 @@\n     \n- pago =\n  sel\n@@ -2024,14 +2024,26 @@\n ber(\n-pago)%0A\n+self.__custo)%0A    \n     \n@@ -2197,16 +2197,21 @@\n         \n+%0A    \n %0A%0A    de\n",
            "lines": "140"
        },
        {
            "label": "2025-10-27_22-08-13",
            "content": "@@ -1926,34 +1926,35 @@\n y%22)%0A        \n-else:%0A    \n+    return%0A\n         pago\n@@ -1998,28 +1998,24 @@\n to)%0A        \n-    \n self.__motor\n@@ -2033,20 +2033,16 @@\n r(pago)%0A\n-    \n         \n",
            "lines": "139"
        },
        {
            "label": "2025-10-27_22-10-44",
            "content": "@@ -2136,21 +2136,8 @@\n t%22)%0A\n-            %0A\n     \n",
            "lines": "139"
        },
        {
            "label": "2025-10-27_22-10-45",
            "content": "class Pessoa:\n    def __init__(self, nome: str, dinheiro: float):\n        self.__nome = nome\n        self.__dinheiro = dinheiro\n\n    def getNome(self) -> str:\n        return self.__nome\n\n    def getDinheiro(self) -> float:\n        return self.__dinheiro\n\n    def pagar(self, value: float):\n        if value > self.__dinheiro:\n            valor_pago = self.__dinheiro\n            self.__dinheiro = 0\n            return valor_pago\n        else:\n            self.__dinheiro -= value\n            return value\n\n    def receber(self, value: float):\n        self.__dinheiro += value\n\n    def __str__(self):\n        return f\"{self.__nome}:R${self.__dinheiro:.2f}\"\n\n\n\nclass Moto:\n    def __init__(self):\n        self.__motorista = None\n        self.__passageiro = None\n        self.__custo = 0\n\n    def setMotorista(self, motorista: Pessoa):\n        if self.__motorista is not None:\n            print(\"fail: ja existe motorista\")\n            return\n        self.__motorista = motorista\n\n    def removerMotorista(self):\n        if self.__motorista is None:\n            print(\"fail: nao existe motorista\")\n            return\n        self.__motorista = None\n\n    def subiuPassageiro(self, passageiro: Pessoa):\n        if self.__motorista is None:\n            print(\"fail: nao existe motorista\")\n            return\n        if self.__passageiro is not None:\n            print(\"fail: ja existe passageiro na moto\")\n            return\n        self.__passageiro = passageiro\n        self.__custo = 0\n\n    def dirigir(self, km: float):\n        if self.__passageiro is None:\n            print(\"fail: nao existe passageiro na moto\")\n            return\n        self.__custo += km\n\n    def descerPassageiro(self):\n        if self.__passageiro is None:\n            print(\"fail: nao existe passageiro na moto\")\n            return\n        if self.__passageiro.getDinheiro() < self.__custo:\n            print(\"fail: Passenger does not have enough money\")\n        else:\n            pago = self.__passageiro.pagar(self.__custo)\n            self.__motorista.receber(pago)\n            print(f\"{self.__passageiro.getNome()}:{int(self.__passageiro.getDinheiro())} left\")\n            \n        self.__passageiro = None\n        self.__custo = 0\n         \n\n    def __str__(self):\n        if self.__motorista is not None:\n            motorista = f\"{self.__motorista.getNome()}:{int(self.__motorista.getDinheiro())}\"\n        else:\n            motorista = \"None\"\n\n        if self.__passageiro is not None:\n            passageiro = f\"{self.__passageiro.getNome()}:{int(self.__passageiro.getDinheiro())}\"\n        else:\n            passageiro = \"None\"\n        return f\"Cost: {int(self.__custo)}, Driver: {motorista}, Passenger: {passageiro}\"\n\n\ndef main():\n    moto = Moto()\n    pessoas ={}\n\n    while True:\n        line = input()\n        args = line.split()\n        print(\"$\" + line)\n\n        if args[0] == \"end\":\n            break\n\n        elif args[0] == \"addPerson\":\n            nome = args[1]\n            dinheiro = float(args[2])\n            pessoas[nome] = Pessoa(nome, dinheiro)\n\n        elif args[0] == \"setDriver\":\n            nome = args[1]\n            dinheiro = float(args[2])\n            if nome not in pessoas:\n                pessoas[nome] = Pessoa(nome, dinheiro)\n            moto.setMotorista(pessoas[nome])\n\n        elif args[0] == \"rmMotorista\":\n            moto.removerMotorista()\n\n        elif args[0] == \"setPass\":\n            nome = args[1]\n            dinheiro = float(args[2])\n            if nome not in pessoas:\n                pessoas[nome] = Pessoa(nome, dinheiro)\n            moto.subiuPassageiro(pessoas[nome])\n\n        elif args[0] == \"drive\":\n            km = float(args[1])\n            moto.dirigir(km)\n\n        elif args[0] == \"leavePass\":\n            moto.descerPassageiro()\n\n        elif args[0] == \"show\":\n            if moto:\n                print(moto)\n            else:\n                print(\"fail: moto nao inicializada\")\n\n        else:\n            print(\"fail: comando invalido\")\nmain()\n",
            "lines": "140"
        }
    ]
}