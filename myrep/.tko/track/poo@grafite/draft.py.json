{
    "patches": [
        {
            "label": "2025-10-26_01-15-06",
            "content": "@@ -1,2073 +0,0 @@\n-class Grafite:%0A    def __init__(self, calibre: float, dureza: str, tamanho: int):%0A        self.__calibre = calibre%0A        self.__dureza = dureza%0A        self.__tamanho = tamanho%0A%0A    def getCalibre(self) -%3E float:%0A        return self.__calibre%0A%0A    def getDureza(self) -%3E str:%0A        return self.__dureza%0A%0A    def getTamanho(self) -%3E int:%0A        return self.__tamanho%0A%0A    def setTamanho(self, value: int):%0A        self.__tamanho = value%0A%0A    def usagePerSheet(self) -%3E int:%0A        gasto = %7B%22HB%22: 1, %222B%22: 2, %224B%22: 4, %226B%22: 6%7D%0A        return gasto.get(getDureza(), 0)%0A%0A    def __str__(self):%0A        return f%22%7Bself.__calibre:.1f%7D:%7Bself.__dureza%7D:%7Bself.__tamanho%7D%22%0A%0Aclass Lapiseira:%0A    def __init__(self, calibre: float):%0A        self.__calibre = calibre%0A        self.__grafite: Grafite %7C None = None%0A%0A    def hasGrafite(self) -%3E bool:%0A        return self.__grafite is not None%0A    %0A    def insert(self, grafite: Grafite):%0A        if self.hasGrafite():%0A            print(%22J%C3%A1 existe grafite na lapiseira%22)%0A            return%0A        if grafite._Grafite__calibre != self.__calibre:%0A            print(%22Calibre incompat%C3%ADvel%22)%0A            return%0A            self.__grafite = grafite%0A%0A    def remove(self) -%3E Grafite %7C None:%0A        if not self.hasGrafite():%0A            print(%22fail: n%C3%A3o existe grafite na lapiseira%22)%0A            return None%0A        grafite = self.__grafite %0A        self.__grafite = None%0A        return grafite%0A%0A    def write(self):%0A        if not self.hasGrafite():%0A            print(%22fail: n%C3%A3o existe grafite na lapiseira%22)%0A            return%0A        if tamanho %3C= 10:%0A            print(%22fail: tamanho insuficiente de grafite%22)%0A            return %0A        if tamanho - gasto %3C 10:%0A            grafite.setTamanho(10)%0A            print(%22fail: folha incompleta%22)%0A            return%0A%0A        grafite.setTamanho(tamanho - gasto)%0A%0A%0A    def __str__(self):%0A        if self.__grafite:%0A            return f%22calibre:%7Bself.__calibre:.1f%7D, grafite:%7Bself.__grafite%7D%22%0A        else:%0A            return f%22calibre:%7Bself.__calibre:.1f%7D, grafite:(null)%22%0A%0Adef main():%0A%0Amain()%0A\n",
            "lines": "0"
        },
        {
            "label": "2025-10-26_01-44-31",
            "content": "class Grafite:\n    def __init__(self, calibre: float, dureza: str, tamanho: int):\n        self.__calibre = calibre\n        self.__dureza = dureza\n        self.__tamanho = tamanho\n\n    def getCalibre(self) -> float:\n        return self.__calibre\n\n    def getDureza(self) -> str:\n        return self.__dureza\n\n    def getTamanho(self) -> int:\n        return self.__tamanho\n\n    def setTamanho(self, value: int):\n        self.__tamanho = value\n\n    def usagePerSheet(self) -> int:\n        gasto = {\"HB\": 1, \"2B\": 2, \"4B\": 4, \"6B\": 6}\n        return gasto.get(getDureza(), 0)\n\n    def __str__(self):\n        return f\"{self.__calibre:.1f}:{self.__dureza}:{self.__tamanho}\"\n\nclass Lapiseira:\n    def __init__(self, calibre: float):\n        self.__calibre = calibre\n        self.__grafite: Grafite | None = None\n\n    def hasGrafite(self) -> bool:\n        return self.__grafite is not None\n    \n    def insert(self, grafite: Grafite):\n        if self.hasGrafite():\n            print(\"J\u00e1 existe grafite na lapiseira\")\n            return\n        if grafite._Grafite__calibre != self.__calibre:\n            print(\"Calibre incompat\u00edvel\")\n            return\n            self.__grafite = grafite\n\n    def remove(self) -> Grafite | None:\n        if not self.hasGrafite():\n            print(\"fail: n\u00e3o existe grafite na lapiseira\")\n            return None\n        grafite = self.__grafite \n        self.__grafite = None\n        return grafite\n\n    def write(self):\n        if not self.hasGrafite():\n            print(\"fail: n\u00e3o existe grafite na lapiseira\")\n            return\n        if tamanho <= 10:\n            print(\"fail: tamanho insuficiente de grafite\")\n            return \n        if tamanho - gasto < 10:\n            grafite.setTamanho(10)\n            print(\"fail: folha incompleta\")\n            return\n\n        grafite.setTamanho(tamanho - gasto)\n\n\n    def __str__(self):\n        if self.__grafite:\n            return f\"calibre:{self.__calibre:.1f}, grafite:{self.__grafite}\"\n        else:\n            return f\"calibre:{self.__calibre:.1f}, grafite:(null)\"\n\ndef main():\n\nmain()\n",
            "lines": "74"
        }
    ]
}